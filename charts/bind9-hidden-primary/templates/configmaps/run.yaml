{{- if empty .Values.existingConfigMap.run }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "bind9-hidden-primary.fullname" . }}-run
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "bind9-hidden-primary.labels" . | nindent 4 }}
data:
  run.sh: |
    #/bin/sh

    echo "Container bootup..."

    echo "Copy zonefiles into volume"
    cp /zonedbs/db.* /var/lib/bind/


    echo "Set serial of zonefiles to current unix timestamp"

    timestamp=$(date +%s)
    echo "Current timestamp (used serial): $timestamp"

    for file in /var/lib/bind/db.*; do
        if [ -f "$file" ]; then
            sed -i "s/<<SERIALASUNIXTIMESTAMPDYN>>/$timestamp/g" "$file"
            echo "Updated zonefile: $file"
        fi
    done

    echo "Content of /var/lib/bind/ ..."
    ls -la /var/lib/bind/

    if [ "$TSIGKEY_KEY" ]; then
      echo "TSIG key already existing within secret... Skip.";
    else
      kubectl patch secret {{ include "bind9-hidden-primary.fullname" . }}-tsigkey -p "{\"data\": {\"rndc-allow-transfer-tsigkey.conf\":\"$(tsig-keygen -a $TSIG_HMAC_FUNC $TSIG_KEYNAME | base64 -w 0)\"}}";
    fi

    echo "Volume and secret prep finished ..."
  exec.sh: |
    #/bin/sh

    echo "Container bootup..."
    echo "Check if serial of zonefiles are already setted..."

    for file in /var/lib/bind/db.*; do
        if [ -f "$file" ]; then
          if grep -q "<<SERIALASUNIXTIMESTAMPDYN>>" "$file"; then
            echo "Zonefiles not ready, exiting ..."
            /bin/sleep 3
            exit 1
          fi
        else
          echo "No zonefiles found, exiting ..."
          /bin/sleep 3
          exit 1
        fi
    done

    for file in /etc/bind/includes.d/tsig/*.conf; do
        if [ -f "$file" ]; then
          if grep -q "secret" "$file"; then
            echo "TSIG keys not ready, exiting ..."
            /bin/sleep 3
            exit 1
          fi
        else
          echo "No TSIG key files found, exiting ..."
          /bin/sleep 3
          exit 1
        fi
    done

    echo "Found patched zonefile/s ..."
    echo "Found TSIG key files ... starting bind ..."
    /bin/sleep 10
    exec /usr/sbin/named -f -c /etc/bind/named.conf -4
{{- end }}
