{{- if empty .Values.existingEnvSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace .Release.Name) | default dict }}
  {{- $secretDataSecretKey := (get $secretObj "data.SECRET_KEY") | default dict }}
  {{- $secretDataUtilsSecret := (get $secretObj "data.UTILS_SECRET") | default dict }}
  {{- $secretKeySecret := (get $secretDataSecretKey .Release.Name) | default (randAlphaNum 32 | b64enc) }}
  {{- $utilsSecretSecret := (get $secretDataUtilsSecret .Release.Name) | default (randAlphaNum 32 | b64enc) }}
  SECRET_KEY: {{ $secretKeySecret | quote }}
  UTILS_SECRET: {{ $utilsSecretSecret | quote }}
{{- end }}
